
@{
    ViewData["Title"] = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles
{
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/dt-1.10.16/b-1.4.2/b-html5-1.4.2/b-print-1.4.2/sl-1.2.3/datatables.min.css" />
}
@(Html.Ext().Grid<ApplicationUserRequest>().Name("user").RowId("Id")
               .Columns(cols =>
               {
                   cols.Add(c => c.UserName).Title("UserName").Render(() => "userNameFormatter").Width("20%");
                   cols.Add(c => c.Email).Title("Email").Render(() => "emailColumnFormatter").Width("30%");
                   cols.Add(c => c.ContactNo).Title("ContactNo").Render(() => "contactNoColumnFormatter").Width("30%");
                   cols.Add(c => c.Role).Title("Role").Render(() => "roleColumnFormatter").Width("20%");
                   cols.Add(c => c.Id).Data("Id").Title("").Render(() => "actionFormatter").Click("onClick");
               })
               .ServerSide(true)
               .DataSource(c =>
                   c.Ajax().Url("/user/GetUserList").Method("GET")
               )
)

@section Scripts{
    <script src="~/js/addons/datatables.min.js"></script>
    <script>
        $(document).ready(function () {
            $(".navbar-nav").find(".active").removeClass("active");
            $(".navbar-nav").find(".nav-user").addClass("active");
            $('#dt-basic-checkbox').DataTable({
                displayStart: 2,
                columnDefs: [{
                    orderable: false,
                    className: 'select-checkbox',
                    targets: 0
                }],
                select: {
                    style: 'os',
                    selector: 'td:first-child'
                }
            });
        });
        function userNameFormatter(data, type, row, meta) {
            return "<span>" + row.userName + "</span>"
        }
        function emailColumnFormatter(data, type, row, meta) {
            return "<span>" + row.email + "</span>"
        }
        function contactNoColumnFormatter(data, type, row, meta) {
            return "<span>" + row.contactNo + "</span>"
        }
        function roleColumnFormatter(data, type, row, meta) {
            return "<span>" + row.role + "</span>"
        }
        function actionFormatter(data, type, row, meta) {
            if (row.isLocked)
                return '<a href="/user/LockUnLock/' + row.id + '" type="button" data-type="view" class="btn btn-sm btn-danger"><i class="fa fa-lg fa-fw fa-user-lock"></i></a>';
            else
                return '<a href="/user/LockUnLock/' + row.id + '" type="button" data-type="view" class="btn btn-sm btn-info"><i class="fa fa-lg fa-fw fa-user-check"></i></a>';
        }
        function onClick(e) {
            if (e.data.type == 'remove') {
                console.log('remove clicked');
            } else if (e.data.type == 'view') {
                console.log('view clicked');
            }
        }
    </script>
}
